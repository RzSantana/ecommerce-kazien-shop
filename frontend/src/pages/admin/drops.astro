---
import AdminLayout from "@layouts/AdminLayout.astro";
import { dropService } from "src/services/dropService";
import Button from "@components/ui/Button";
import type { Drop } from "src/types/drop";

export const prerender = false;

// Obtener drops
let drops: Drop[] = [];
let error = null;

try {
    drops = await dropService.getAllDrops();
} catch (e) {
    error = 'Error loading collections';
    console.error('Drops error:', e);
}

const getStatusColor = (status: string) => {
    switch (status.toLowerCase()) {
        case 'active': return 'bg-green-100 text-green-800';
        case 'coming_soon': return 'bg-blue-100 text-blue-800';
        case 'ended': return 'bg-gray-100 text-gray-800';
        default: return 'bg-gray-100 text-gray-800';
    }
};

const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString();
};
---

<AdminLayout title="Collections Management">
    {error && (
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6">
            {error}
        </div>
    )}

    <!-- Header -->
    <div class="flex justify-between items-center mb-6">
        <h2 class="text-xl font-semibold text-gray-900">
            Collections ({drops.length})
        </h2>
        <Button text="Create New Collection" type="primary" />
    </div>

    <!-- Collections Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {drops.map((drop) => (
            <div class="bg-white rounded-lg shadow-md overflow-hidden">
                <!-- Banner Image -->
                <div class="h-48 bg-gray-200">
                    <img
                        src={drop.bannerImage}
                        alt={drop.name}
                        class="w-full h-full object-cover"
                    />
                </div>

                <!-- Content -->
                <div class="p-6">
                    <div class="flex items-start justify-between mb-2">
                        <h3 class="text-lg font-semibold text-gray-900 truncate">
                            {drop.name}
                        </h3>
                        <span class={`inline-flex px-2 py-1 text-xs font-semibold rounded-full capitalize ${getStatusColor(drop.status)}`}>
                            {drop.status.replace('_', ' ')}
                        </span>
                    </div>

                    <p class="text-sm text-gray-600 mb-4 line-clamp-3">
                        {drop.description}
                    </p>

                    <div class="space-y-2 text-sm text-gray-500">
                        <div class="flex justify-between">
                            <span>Release Date:</span>
                            <span>{formatDate(drop.releaseDate)}</span>
                        </div>
                        {drop.endDate && (
                            <div class="flex justify-between">
                                <span>End Date:</span>
                                <span>{formatDate(drop.endDate)}</span>
                            </div>
                        )}
                        <div class="flex justify-between">
                            <span>Products:</span>
                            <span>{drop.products?.length || 0}</span>
                        </div>
                    </div>

                    <!-- Color Theme -->
                    <div class="mt-4 pt-4 border-t border-gray-200">
                        <div class="text-xs text-gray-500 mb-2">Theme Colors:</div>
                        <div class="flex space-x-2">
                            <div
                                class="w-6 h-6 rounded border"
                                style={`background-color: ${drop.primaryColor}`}
                                title="Primary"
                            ></div>
                            <div
                                class="w-6 h-6 rounded border"
                                style={`background-color: ${drop.secondaryColor}`}
                                title="Secondary"
                            ></div>
                            <div
                                class="w-6 h-6 rounded border"
                                style={`background-color: ${drop.accentColor}`}
                                title="Accent"
                            ></div>
                        </div>
                    </div>

                    <!-- Actions -->
                    <div class="mt-6 flex space-x-2">
                        <button class="flex-1 text-sm px-3 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">
                            Edit
                        </button>
                        <button class="flex-1 text-sm px-3 py-2 bg-gray-600 text-white rounded hover:bg-gray-700">
                            Manage Products
                        </button>
                        <button class="text-sm px-3 py-2 bg-red-600 text-white rounded hover:bg-red-700">
                            Delete
                        </button>
                    </div>
                </div>
            </div>
        ))}
    </div>

    {drops.length === 0 && (
        <div class="text-center py-12">
            <div class="text-gray-500 mb-4">
                No collections found. Create your first collection to get started.
            </div>
            <Button text="Create First Collection" type="primary" />
        </div>
    )}

    <!-- Summary Stats -->
    <div class="mt-8 grid grid-cols-1 md:grid-cols-4 gap-4">
        <div class="bg-white rounded-lg shadow p-4">
            <div class="text-sm font-medium text-gray-500">Total Collections</div>
            <div class="text-2xl font-bold text-gray-900">{drops.length}</div>
        </div>
        <div class="bg-white rounded-lg shadow p-4">
            <div class="text-sm font-medium text-gray-500">Active</div>
            <div class="text-2xl font-bold text-green-600">
                {drops.filter(d => d.status === 'ACTIVE').length}
            </div>
        </div>
        <div class="bg-white rounded-lg shadow p-4">
            <div class="text-sm font-medium text-gray-500">Coming Soon</div>
            <div class="text-2xl font-bold text-blue-600">
                {drops.filter(d => d.status === 'COMING_SOON').length}
            </div>
        </div>
        <div class="bg-white rounded-lg shadow p-4">
            <div class="text-sm font-medium text-gray-500">Ended</div>
            <div class="text-2xl font-bold text-gray-600">
                {drops.filter(d => d.status === 'ENDED').length}
            </div>
        </div>
    </div>
</AdminLayout>
